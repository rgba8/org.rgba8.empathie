//-----------------------------------------------------------------------------
//
// File Name : emp_tt_assert.h
//
// Creation Date : Tue 12 Oct 2010 03:26:28 PM CEST
//
// Modification Date : lun. 29 juin 2015 22:49:57 CEST
//
// Created By : ksej - www.rgba8.org
//
// Description :
//
//-----------------------------------------------------------------------------
#ifndef EMP_TT_ASSERT_H
#define EMP_TT_ASSERT_H

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
#include "emp_tt_bool.h"
#include "emp_tt_trait.h"
#include "emp_tt_are_equal.h"

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
namespace emp { namespace tt {

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
template <bool t_bCon>
class assert;

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
EMP_TT_DECLARE_VALUE_SPECIAL(assert, true, emp::tt::true_);

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
template <size_t, size_t>
EMP_NOINSTANCE_CLASS(assert_tester)
};

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
} } // tt // emp

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
#define EMP_STATIC_ASSERT_IMP(x_Count, x_bCondition)\
typedef EMP_UNUSED emp::tt::assert_tester\
    <x_Count, sizeof(emp::tt::assert<x_bCondition>)>\
        EMP_PP_TOKEN(assert_, x_Count)

#define EMP_STATIC_ASSERT(x_Condition)\
    EMP_STATIC_ASSERT_IMP(EMP_XX_COUNTER, x_Condition)

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
#define EMP_STATIC_ASSERT_TYPE_EQUAL(x_T0, x_T1)\
EMP_STATIC_ASSERT((emp::tt::are_equal<x_T0, x_T1>::value))

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
#endif

