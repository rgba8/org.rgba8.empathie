//-----------------------------------------------------------------------------
// @rgba8.org
//-----------------------------------------------------------------------------
#ifndef EMP_TT_CAST_H
#define EMP_TT_CAST_H

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
#include "emp_tt_assert.h"
#include "emp_tt_limit.h"

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
namespace emp { namespace tt {

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
template <typename t_From, t_From t_tFrom, typename t_To>
EMP_NOINSTANCE_CLASS(cast)
public:
    static const bool bmin = t_tFrom >= emp::tt::min<t_To>::value;
    EMP_STATIC_ASSERT(bmin);

    static const bool bmax = t_tFrom <= emp::tt::max<t_To>::value;
    EMP_STATIC_ASSERT(bmax);

    static const t_To value = static_cast<t_To>(t_tFrom);
};

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
} }

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
#endif

