//-----------------------------------------------------------------------------
// @rgba8.org
//-----------------------------------------------------------------------------
#ifndef EMP_TT_ARRAY_H
#define EMP_TT_ARRAY_H

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
#include "emp_tt_def.h"
#include "emp_tt_null.h"

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
#include "emp_pp_argument.h"
#include "emp_pp_for.h"
#include "emp_pp_iterate.h"

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
namespace emp { namespace tt {

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
#if (EMP_XX_TT_ARRAY_COUNT > 0)

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
template
<EMP_PP_FOR(0, EMP_XX_TT_ARRAY_COUNT, EMP_PP_TEMPLATE_PARAMETER_DEFAULT)>
EMP_NOINSTANCE_CLASS(array)
public:
    EMP_PP_FOR(0, EMP_XX_TT_ARRAY_COUNT, EMP_PP_CLASS_TYPEDEF)
};

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
template <typename t_TypeArray, unsigned int t_ui32Index>
class array_get;

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
#define EMP_PP_ITERATION_COUNT EMP_XX_TT_ARRAY_COUNT
#define EMP_PP_ITERATION_FILE() "emp_tt_array.def"
#include EMP_PP_ITERATE()

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
#endif

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
} }

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
#endif

